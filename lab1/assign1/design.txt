Name: <YOUR NAME>
SUNet: <SUNet ID>

In 1-3 sentences per section, comment on your approach to each of the parts of the assignment. What was your high-level strategy? How did you translate that into code? Did you make use of any Pythonic practices? We want you to reflect on your coding style, and whether you're making full use of the utilities provides.


# Caesar Cipher
        Get the position of the letter in the alphabet by the ord(char) - ord('A'), increment if by 3,
        make sure it can't exceed the length of the alphabet and get the right character from the string.ascii_uppercase
        Decription is the same, but instead of 3, we would increment by 23 (decreasing makes a problem with negative numbers)
        used arays
# Vigenere Cipher
        Same as Caesar, but instead of incrementing by a constant use
        ord(corresponding letter from keyword). The corresponding letter from the keyword
        is found using keyword[i % len(keyword)], where 'i' is the index where we are in the plaintext
        Decription is the same, just invert the offset by substracting it from 26
        used arrays
# scytale
        Using array slicing just go through the array with 'circumference' long steps 'circumference' times.
        Decrpytion is more complicated: create the first line of indices, repeat them (len(keyword) / circumference) + 1 times,
        while incrementing every element by 1 with each repetition. Finally cut the first len(keyword) elements and use
        them as indices.
        Used arrays
# railfence
        Encrpyt line by line
        Decrypt by walking through an imaginary matrix and getting to each letter in the right order
        I used arrays